package de.unikassel.ann.gen;
//package de.unikassel.ann.io.beans;
//
//import java.text.DecimalFormat;
//import java.text.NumberFormat;
//
//public class DynamicBean implements TrainingBean {
//	
//	private static int outputSize;
//	private static int inputSize;
//	private Double[] input;
//	private Double[] output;
//	
//	public DynamicBean() {
//		input = new Double[inputSize];
//		output = new Double[outputSize];
//	}
//	
//	public static void setSize(int i, int o) {
//		inputSize = i;
//		outputSize = o;
//	}
//	 
//	@Override
//	public int getInputSize() {
//		return inputSize;
//	}
//
//	@Override
//	public int getOutputSize() {
//		return outputSize;
//	}
//	
//	@Override
//	public Double getInput(int index) {
//		return input[index];
//	}
//
//	@Override
//	public Double getOutput(int index) {
//		return output[index];
//	}
//	
//	@Override
//	public Double[] getInput() {
//		return input;
//	}
//
//	@Override
//	public Double[] getOutput() {
//		return output;
//	}
//	
//	/*
//	 * DynamicBean has for each index a <br/>
//	 * getter and setter for each type (input and output) <br><br>
//	 * 
//	 * This will class will be autogenerated with bcel at runtime<br><br>
//	 * 
//	 * In this example there are only getters and setters for first index (0)
//	 * Looks like this
//	 */
//
//	public double getO0() {
//		return output[0];
//	}
//	
//	public void setO0(double val) {
//		output[0] = val;
//	}
//	
//	public double getI0() {
//		return input[0];
//	}
//	
//	public void setI0(double val) {
//		input[0] = val;
//	}
//	
//	/*
//	 * Looks like this END
//	 */
//	
//	
//	@Override
//	public String toString() {
//		NumberFormat fmt = new DecimalFormat("\"#.######\"");
//		StringBuilder sb = new StringBuilder();
//		
//		for (int i=0; i<input.length; i++) {
//			sb.append(fmt.format(input[i]));
//			sb.append(";");
//		}
//		for (int i=0; i<output.length-1; i++) {
//			sb.append(fmt.format(output[i]));
//			sb.append(";");
//		}
//		sb.append(fmt.format(output[output.length-1]));
//		sb.append("\n");
//		return sb.toString();
//	}
//}